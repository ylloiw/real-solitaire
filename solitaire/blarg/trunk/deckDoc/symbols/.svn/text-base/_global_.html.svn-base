<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="generator" content="JsDoc Toolkit" />
		
		<title>JsDoc Reference - _global_</title>

		<style type="text/css">
			/* default.css */
body
{
	font: 12px "Lucida Grande", Tahoma, Arial, Helvetica, sans-serif;
	width: 800px;
}

.header
{
	clear: both;
	background-color: #ccc;
	padding: 8px;
}

h1
{
	font-size: 150%;
	font-weight: bold;
	padding: 0;
	margin: 1em 0 0 .3em;
}

hr
{
	border: none 0;
	border-top: 1px solid #7F8FB1;
	height: 1px;
}

pre.code
{
	display: block;
	padding: 8px;
	border: 1px dashed #ccc;
}

#index
{
	margin-top: 24px;
	float: left;
	width: 160px;
	position: absolute;
	left: 8px;
	background-color: #F3F3F3;
	padding: 8px;
}

#content
{
	margin-left: 190px;
	width: 600px;
}

.classList
{
	list-style-type: none;
	padding: 0;
	margin: 0 0 0 8px;
	font-family: arial, sans-serif;
	font-size: 1em;
	overflow: auto;
}

.classList li
{
	padding: 0;
	margin: 0 0 8px 0;
}

.summaryTable { width: 100%; }

h1.classTitle
{
	font-size:170%;
	line-height:130%;
}

h2 { font-size: 110%; }
caption, div.sectionTitle
{
	background-color: #7F8FB1;
	color: #fff;
	font-size:130%;
	text-align: left;
	padding: 2px 6px 2px 6px;
	border: 1px #7F8FB1 solid;
}

div.sectionTitle { margin-bottom: 8px; }
.summaryTable thead { display: none; }

.summaryTable td
{
	vertical-align: top;
	padding: 4px;
	border-bottom: 1px #7F8FB1 solid;
	border-right: 1px #7F8FB1 solid;
}

/*col#summaryAttributes {}*/
.summaryTable td.attributes
{
	border-left: 1px #7F8FB1 solid;
	width: 140px;
	text-align: right;
}

td.attributes, .fixedFont
{
	line-height: 15px;
	color: #002EBE;
	font-family: "Courier New",Courier,monospace;
	font-size: 13px;
}

.summaryTable td.nameDescription
{
	text-align: left;
	font-size: 13px;
	line-height: 15px;
}

.summaryTable td.nameDescription, .description
{
	line-height: 15px;
	padding: 4px;
	padding-left: 4px;
}

.summaryTable { margin-bottom: 8px; }

ul.inheritsList
{
	list-style: square;
	margin-left: 20px;
	padding-left: 0;
}

.detailList {
	margin-left: 20px; 
	line-height: 15px;
}
.detailList dt { margin-left: 20px; }

.detailList .heading
{
	font-weight: bold;
	padding-bottom: 6px;
	margin-left: 0;
}

.light, td.attributes, .light a:link, .light a:visited
{
	color: #777;
	font-style: italic;
}

.fineprint
{
	text-align: right;
	font-size: 10px;
}
		</style>
	</head>

	<body>
<!-- ============================== header ================================= -->	
		<!-- begin static/header.html -->
		<div id="header">
</div>
		<!-- end static/header.html -->

<!-- ============================== classes index ============================ -->
		<div id="index">
			<!-- begin publish.classesIndex -->
			<div align="center"><a href="../index.html">Class Index</a>
| <a href="../files.html">File Index</a></div>
<hr />
<h2>Classes</h2>
<ul class="classList">
	
	<li><i><a href="../symbols/_global_.html">_global_</a></i></li>
	
</ul>
<hr />
			<!-- end publish.classesIndex -->
		</div>
		
		<div id="content">
<!-- ============================== class title ============================ -->
			<h1 class="classTitle">
				
				Built-In Namespace _global_
			</h1>

<!-- ============================== class summary ========================== -->			
			<p class="description">
				
				
			
				
				
				
			</p>

<!-- ============================== constructor summary ==================== -->			
			

<!-- ============================== properties summary ===================== -->
			

<!-- ============================== methods summary ======================== -->
			
				
				
				<table class="summaryTable" cellspacing="0" summary="A summary of the methods documented in the class _global_.">
					<caption>Method Summary</caption>
					<thead>
						<tr>
							<th scope="col">Method Attributes</th>
							<th scope="col">Method Name and Description</th>
						</tr>
					</thead>
					<tbody>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#addBottom">addBottom</a></b>(card)
								</div>
								<div class="description">Adds the given card to the bottom of the deck.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#addTop">addTop</a></b>(card, nofilter)
								</div>
								<div class="description">Adds the given card to the top of the deck.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#deal">deal</a></b>(deck, n, facedown, bottom, nonPausing)
								</div>
								<div class="description">Moves the top n cards from this deck to the specified deck.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#Deck">Deck</a></b>(type, x, y, options, zOffset)
								</div>
								<div class="description">Represents a deck of cards.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#fire">fire</a></b>(event)
								</div>
								<div class="description">Fires the given event by passing it to every observer.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#flipTopCard">flipTopCard</a></b>()
								</div>
								<div class="description">Flips the top card of the deck.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#getAction">getAction</a></b>()
								</div>
								<div class="description">Returns the action associated with this deck.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#getCards">getCards</a></b>()
								</div>
								<div class="description">Returns all of the cards currently in the deck.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#getFilter">getFilter</a></b>()
								</div>
								<div class="description">Returns this deck's current filter.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#getSize">getSize</a></b>()
								</div>
								<div class="description">Returns the number of cards in the deck.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#getType">getType</a></b>()
								</div>
								<div class="description">Returns what type of deck this is.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#getX">getX</a></b>()
								</div>
								<div class="description">Returns the x position of this deck in magical card units.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#getY">getY</a></b>()
								</div>
								<div class="description">Returns the y position of this deck in magical card units.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#getzOffset">getzOffset</a></b>()
								</div>
								<div class="description"></div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#initialize">initialize</a></b>(facedown)
								</div>
								<div class="description">Replaces all of the cards in the deck with the standard 52 cards.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#isActive">isActive</a></b>()
								</div>
								<div class="description">Returns whether this is the "active" hand--that is, whether it is the
human player's hand.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#isDraggable">isDraggable</a></b>()
								</div>
								<div class="description">Returns whether the cards from this pile should be draggable.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#observe">observe</a></b>(observer)
								</div>
								<div class="description">Adds an observer to the game.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#pause">pause</a></b>()
								</div>
								<div class="description">Pauses the deck, causing it to not send any more events out.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#peek">peek</a></b>()
								</div>
								<div class="description">Returns the top card of the deck without changing anything.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#remove">remove</a></b>(card)
								</div>
								<div class="description">Removes the given card from the deck.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#removeObserver">removeObserver</a></b>(observer)
								</div>
								<div class="description">Removes an occurence of the specified observer from the observers list.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#setAction">setAction</a></b>(newAction)
								</div>
								<div class="description">Sets the action associated with this deck.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#setActive">setActive</a></b>(flag)
								</div>
								<div class="description">Sets whether this deck is the "active" hand.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#setDraggable">setDraggable</a></b>(flag)
								</div>
								<div class="description">Sets whether the cards from this pile should be draggable.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#setFilter">setFilter</a></b>(newFilter)
								</div>
								<div class="description">Sets the filter to a new function.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#setType">setType</a></b>(newType)
								</div>
								<div class="description">Sets what type of deck this is.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#setX">setX</a></b>(newX)
								</div>
								<div class="description">Sets the x position of this deck in magical card units.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#setY">setY</a></b>(newY)
								</div>
								<div class="description">Sets the y position of this deck in magical card units.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#shuffle">shuffle</a></b>()
								</div>
								<div class="description">Shuffles the deck.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/_global_.html#unpause">unpause</a></b>()
								</div>
								<div class="description">Unpauses the deck, causing it to send events out once more.</div>
							</td>
						</tr>
					
					</tbody>
				</table>
				
				
				
			
<!-- ============================== events summary ======================== -->
			

<!-- ============================== constructor details ==================== -->		
			

<!-- ============================== field details ========================== -->		
			

<!-- ============================== method details ========================= -->		
			
				<div class="sectionTitle">
					Method Detail
				</div>
				
					<a name="addBottom"> </a>
					<div class="fixedFont">
					
					
					<b>addBottom</b>(card)
					
					</div>
					<div class="description">
						Adds the given card to the bottom of the deck.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>card</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="addTop"> </a>
					<div class="fixedFont">
					
					
					<b>addTop</b>(card, nofilter)
					
					</div>
					<div class="description">
						Adds the given card to the top of the deck. Returns true if the card was
added and false otherwise.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>card</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<b>nofilter</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="deal"> </a>
					<div class="fixedFont">
					
					
					<b>deal</b>(deck, n, facedown, bottom, nonPausing)
					
					</div>
					<div class="description">
						Moves the top n cards from this deck to the specified deck. If there are
less than n cards in this deck, deals as many as possible. This can
optionally deal the cards face down. You can deal even to a deck that
cannot be added to by other methods. If bottom is true, deals to the
bottom of the target deck rather than the top.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>deck</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<b>n</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<b>facedown</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<b>bottom</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<b>nonPausing</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="Deck"> </a>
					<div class="fixedFont">
					
					
					<b>Deck</b>(type, x, y, options, zOffset)
					
					</div>
					<div class="description">
						Represents a deck of cards. You can add cards to the deck and take them away,
along with all the other things you would expect of a deck of cards. The deck
takes a type as an argument.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>type</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<b>x</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<b>y</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<b>options</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<b>zOffset</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="fire"> </a>
					<div class="fixedFont">
					
					
					<b>fire</b>(event)
					
					</div>
					<div class="description">
						Fires the given event by passing it to every observer. The event should
have a type like "remove" or "add" and the card that changed. If more
than one card changed, it should have an array of cards.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>event</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="flipTopCard"> </a>
					<div class="fixedFont">
					
					
					<b>flipTopCard</b>()
					
					</div>
					<div class="description">
						Flips the top card of the deck. If the top card is face up, turns it face
down; otherwise, turns it face up.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="getAction"> </a>
					<div class="fixedFont">
					
					
					<b>getAction</b>()
					
					</div>
					<div class="description">
						Returns the action associated with this deck. The action is something
that should be done when it is click, for example. If there is no action,
null is returned.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="getCards"> </a>
					<div class="fixedFont">
					
					
					<b>getCards</b>()
					
					</div>
					<div class="description">
						Returns all of the cards currently in the deck.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="getFilter"> </a>
					<div class="fixedFont">
					
					
					<b>getFilter</b>()
					
					</div>
					<div class="description">
						Returns this deck's current filter.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="getSize"> </a>
					<div class="fixedFont">
					
					
					<b>getSize</b>()
					
					</div>
					<div class="description">
						Returns the number of cards in the deck.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="getType"> </a>
					<div class="fixedFont">
					
					
					<b>getType</b>()
					
					</div>
					<div class="description">
						Returns what type of deck this is. The type is information for the UI
regarding how to treat the deck; it does not affect gameplay.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="getX"> </a>
					<div class="fixedFont">
					
					
					<b>getX</b>()
					
					</div>
					<div class="description">
						Returns the x position of this deck in magical card units. If there is no
position, returns undefined.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="getY"> </a>
					<div class="fixedFont">
					
					
					<b>getY</b>()
					
					</div>
					<div class="description">
						Returns the y position of this deck in magical card units. If there is no
position, returns undefined.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="getzOffset"> </a>
					<div class="fixedFont">
					
					
					<b>getzOffset</b>()
					
					</div>
					<div class="description">
						
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="initialize"> </a>
					<div class="fixedFont">
					
					
					<b>initialize</b>(facedown)
					
					</div>
					<div class="description">
						Replaces all of the cards in the deck with the standard 52 cards.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>facedown</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="isActive"> </a>
					<div class="fixedFont">
					
					
					<b>isActive</b>()
					
					</div>
					<div class="description">
						Returns whether this is the "active" hand--that is, whether it is the
human player's hand.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="isDraggable"> </a>
					<div class="fixedFont">
					
					
					<b>isDraggable</b>()
					
					</div>
					<div class="description">
						Returns whether the cards from this pile should be draggable.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="observe"> </a>
					<div class="fixedFont">
					
					
					<b>observe</b>(observer)
					
					</div>
					<div class="description">
						Adds an observer to the game. The observer should be a function accepting
an event that will be called every time there is a change to the game.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>observer</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="pause"> </a>
					<div class="fixedFont">
					
					
					<b>pause</b>()
					
					</div>
					<div class="description">
						Pauses the deck, causing it to not send any more events out.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="peek"> </a>
					<div class="fixedFont">
					
					
					<b>peek</b>()
					
					</div>
					<div class="description">
						Returns the top card of the deck without changing anything.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="remove"> </a>
					<div class="fixedFont">
					
					
					<b>remove</b>(card)
					
					</div>
					<div class="description">
						Removes the given card from the deck. If the card is not in the deck,
nothing happens.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>card</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="removeObserver"> </a>
					<div class="fixedFont">
					
					
					<b>removeObserver</b>(observer)
					
					</div>
					<div class="description">
						Removes an occurence of the specified observer from the observers list.
If the given observer is in the list twice, only the first instance is
removed. If the given observer is not in the list, nothing happens.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>observer</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="setAction"> </a>
					<div class="fixedFont">
					
					
					<b>setAction</b>(newAction)
					
					</div>
					<div class="description">
						Sets the action associated with this deck.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>newAction</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="setActive"> </a>
					<div class="fixedFont">
					
					
					<b>setActive</b>(flag)
					
					</div>
					<div class="description">
						Sets whether this deck is the "active" hand.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>flag</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="setDraggable"> </a>
					<div class="fixedFont">
					
					
					<b>setDraggable</b>(flag)
					
					</div>
					<div class="description">
						Sets whether the cards from this pile should be draggable.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>flag</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="setFilter"> </a>
					<div class="fixedFont">
					
					
					<b>setFilter</b>(newFilter)
					
					</div>
					<div class="description">
						Sets the filter to a new function. The filter function should take a card
and return true if the given card can be added to the top and false
otherwise. The filter then also takes the deck the drag came from and the
size of the pile being dragged.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>newFilter</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="setType"> </a>
					<div class="fixedFont">
					
					
					<b>setType</b>(newType)
					
					</div>
					<div class="description">
						Sets what type of deck this is. The type is information for the UI
regarding how to treat the deck; it does not affect gameplay.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>newType</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="setX"> </a>
					<div class="fixedFont">
					
					
					<b>setX</b>(newX)
					
					</div>
					<div class="description">
						Sets the x position of this deck in magical card units.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>newX</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="setY"> </a>
					<div class="fixedFont">
					
					
					<b>setY</b>(newY)
					
					</div>
					<div class="description">
						Sets the y position of this deck in magical card units.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<b>newY</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="shuffle"> </a>
					<div class="fixedFont">
					
					
					<b>shuffle</b>()
					
					</div>
					<div class="description">
						Shuffles the deck.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					<hr />
				
					<a name="unpause"> </a>
					<div class="fixedFont">
					
					
					<b>unpause</b>()
					
					</div>
					<div class="description">
						Unpauses the deck, causing it to send events out once more.
						
							<br />
							<i>Defined in: </i> <a href="../symbols/src/js_Deck.js.html">Deck.js</a>.
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					
				
			
			
<!-- ============================== event details ========================= -->		
			
			
			<hr />
		</div>

		
<!-- ============================== footer ================================= -->
		<div class="fineprint" style="clear:both">
			
			Documentation generated by <a href="http://code.google.com/p/jsdoc-toolkit/" target="_blank">JsDoc Toolkit</a> 2.3.2 on Sun Apr 03 2011 12:04:03 GMT-0700 (PDT)
		</div>
	</body>
</html>
